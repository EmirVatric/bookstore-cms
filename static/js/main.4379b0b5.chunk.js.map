{"version":3,"sources":["components/Book.jsx","constants.js","components/CategoryFilter.jsx","actions/index.js","components/BookList.jsx","components/BooksForm.jsx","components/App.js","reducers/index.js","reducers/books.js","reducers/filter.js","index.js"],"names":["Book","book","handleRemoveBook","className","title","categorie","onClick","categories","CategoryFilter","props","onChange","e","handleFilterChange","target","value","map","index","key","CREATE_BOOK","type","connect","state","books","filter","dispatch","removeBook","REMOVE_BOOK","changeFilter","CHANGE_FILTER","BooksForm","event","this","setState","name","test","id","Math","floor","random","addBook","alert","placeholder","handleChange","handleSubmit","React","Component","App","reducer","combineReducers","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","forEach","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4379b0b5.chunk.js","sourcesContent":["import React from 'react';// eslint-disable-line no-unused-vars\n\nconst Book = ({ book, handleRemoveBook }) => {\n  return (\n    <tr className='Lesson-Panel'>\n      <td>{book.title}</td>\n      <td>{book.categorie}</td>\n      <td><button className='button' onClick={() => handleRemoveBook(book)}>Delete</button></td>\n    </tr>\n  );\n}\n\nexport default Book;","export const categories = [\"Action\", \"Biography\", \"History\", \"Horror\", \"Kids\", \"Learning\", \"Sci-Fi\"]","import React from 'react'; // eslint-disable-line no-unused-vars\nimport { categories } from '../constants'\n\nconst CategoryFilter = (props) => {\n  return (\n    <select className='categories1' onChange={(e) => props.handleFilterChange(e.target.value)}>\n      <option value=''>All</option>\n      {categories.map((categorie, index) => <option key={index}>{categorie}</option>)}\n    </select>\n  );\n}\n\nexport default CategoryFilter;","\nexport const CREATE_BOOK = (book) => {\n  return {\n    type: 'CREATE_BOOK',\n    book\n  }\n}\nexport const REMOVE_BOOK = (book) => {\n  return {\n    type: 'REMOVE_BOOK',\n    book\n  }\n}\n\nexport const CHANGE_FILTER = (filter) => {\n  return {\n    type: 'CHANGE_FILTER',\n    filter\n  }\n}","import React from 'react'; // eslint-disable-line no-unused-vars\nimport Book from './Book'; // eslint-disable-line no-unused-vars\nimport CategoryFilter from './CategoryFilter' // eslint-disable-line no-unused-vars\nimport { REMOVE_BOOK, CHANGE_FILTER } from '../actions'\nimport { connect } from 'react-redux'\n\nconst BookList = (props) => {\n  const { books } = props\n  const handleRemoveBook = props.removeBook\n  const handleFilterChange = props.changeFilter\n  return (\n    <div>\n      <div className='header'>\n        <div className='container'>\n          <span className='logo'>Bookstore CMS</span>\n          <span className='categories'>Books</span>\n          <span className='cat'><CategoryFilter handleFilterChange={handleFilterChange} /></span>\n        </div>\n        <div className='oval'>\n          <div className='mask'><i className=\"fa fa-user\"></i></div>\n        </div>\n      </div>\n      <div className='wrapper'>\n        <table className='table'>\n            <tbody>\n              {books.map((book, index) =>\n                <Book\n                  key={index}\n                  book={book}\n                  handleRemoveBook={handleRemoveBook}\n                />)\n              }\n            </tbody>\n        </table>\n      </div>\n      </div>\n      );\n    }\n    \nconst mapStateToProps = (state) => {\n        let {books,filter}=state;\n  if(filter!==''){\n        books = books.filter((book) => filter === book.categorie)\n      }\n      return {\n        books\n      }\n      }\n      \nconst mapDispatchToProps = (dispatch) => {\n  return {\n        removeBook: (book) => dispatch(REMOVE_BOOK(book)),\n      changeFilter: (filter) => dispatch(CHANGE_FILTER(filter))\n    }\n  }\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(BookList)","import React from 'react'; // eslint-disable-line no-unused-vars\nimport { CREATE_BOOK } from '../actions'\nimport { connect } from 'react-redux'\nimport { categories } from '../constants'\n\n\nclass BooksForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      categorie: categories[0]\n    }\n  }\n  handleChange(event) {\n      this.setState({ [event.target.name]: event.target.value })\n  }\n  handleSubmit() {\n    let { title, categorie } = this.state\n\n    if (!(/([^\\s])/.test(title))) {\n      alert('The title should not be empty!');\n      return;\n    }\n\n    let id = Math.floor(Math.random() * 100)\n    this.props.addBook({\n      id,\n      title,\n      categorie\n    })\n    this.setState({\n      title: '',\n      categorie: categories[0]\n    })\n\n  }\n  render() {\n    return (\n      <div className='form'>\n        <input\n          className='input'\n          placeholder='Book title'\n          type=\"text\"\n          name=\"title\"\n          onChange={(e) => this.handleChange(e)}\n          value={this.state.title}\n        />\n        <select\n          className='formSelect'\n          name=\"categorie\"\n          onChange={(e) => this.handleChange(e)}\n          value={this.state.categorie}\n        >\n          {categories.map((categorie) => <option key={categorie}>{categorie}</option>)}\n        </select>\n        <input className='button2' type=\"submit\" value='Add book' onClick={() => this.handleSubmit()} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addBook: (book) => dispatch(CREATE_BOOK(book)),\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(BooksForm)","import React from 'react';// eslint-disable-line no-unused-vars\nimport './App.css';\nimport BookList from './BookList'// eslint-disable-line no-unused-vars\nimport BooksForm from './BooksForm'// eslint-disable-line no-unused-vars\n\nconst App = ()=>\n      <div>\n        <BookList />\n        <div className='wrapper'>\n          <BooksForm />\n        </div>\n      </div>\n\nexport default App;","import { combineReducers } from 'redux'\nimport { books } from './books'\nimport { filter } from './filter'\nexport const reducer = combineReducers({\n  books, filter\n})\n\n","export const books = (books=[],action)=>{\n  switch(action.type){\n    case 'CREATE_BOOK':\n      return [...books,action.book]\n    case 'REMOVE_BOOK':\n      return books.filter((book)=> book.id!==action.book.id)\n    default :\n    return books;\n  }\n}","export const filter = (state = '', action) => {\n  switch (action.type) {\n    case 'CHANGE_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}","import React from 'react'; // eslint-disable-line no-unused-vars\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'; // eslint-disable-line no-unused-vars\nimport { createStore } from 'redux'\nimport { reducer } from './reducers'\nimport { CREATE_BOOK } from './actions'\nimport { Provider } from 'react-redux'// eslint-disable-line no-unused-vars\n\nconst books = [\n  {\n    id: Math.floor(Math.random() * 100),\n    title: 'book1',\n    categorie: \"Action\"\n  },\n  {\n    id: Math.floor(Math.random() * 100),\n    title: 'book2',\n    categorie: \"Biography\"\n  },\n  {\n    id: Math.floor(Math.random() * 100),\n    title: 'book3',\n    categorie: \"History\"\n  }\n]\n\n\nconst store = createStore(reducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nbooks.forEach((book) => store.dispatch(CREATE_BOOK(book)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}